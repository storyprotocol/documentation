{
    "swagger": "2.0",
    "info": {
        "title": "Story Protocol API Reference",
        "contact": {},
        "version": "v1"
    },
    "host": "api.storyprotocol.net",
    "paths": {
        "/api/v2/assets": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of IPAssets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAssets"
                ],
                "summary": "List IPAssets",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber, descendantCount or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IpAssetRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPAssetsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/assets/edges": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of IP Edges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAssets"
                ],
                "summary": "List IP Edges",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IpAssetEdgeRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IPAssetEdgeResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/assets/{assetId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an IPAsset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAssets"
                ],
                "summary": "Get an IPAsset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "assetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPAssetResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/assets/{assetId}/metadata": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve metadata for an IPAsset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAssets"
                ],
                "summary": "Get metadata for an IPAsset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "assetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IpAssetMetadata"
                        }
                    }
                }
            }
        },
        "/api/v2/collections": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "List Collections",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber, assetCount, licensesCount or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.CollectionsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.CollectionsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/collections/{collectionId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get an Collection",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.CollectionResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/detailed-ip-license-terms": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve detailed IP License Terms associated with list of IP ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPLicenseTerms"
                ],
                "summary": "List detailed ip license term",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.DetailedIPLicenseTermsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DetailedTermsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/disputes": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of Disputes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disputes"
                ],
                "summary": "List Disputes",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DisputeRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.DisputesResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/disputes/{disputeId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a Dispute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disputes"
                ],
                "summary": "Get a Dispute",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dispute ID",
                        "name": "disputeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.DisputeResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/ip_group_edges": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an IPGroup edges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPGroup"
                ],
                "summary": "List a IPGroup's edges",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber, groupId or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupEdgesRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupEdgesResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/ip_groups": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an IPGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPGroup"
                ],
                "summary": "List IP groups",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be groupId or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/ip/terms": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of IPLicenseTerms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPLicenseTerms"
                ],
                "summary": "List IPLicenseTerms",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPLicenseTermsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IPLicenseTermsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/ip/terms/{ipId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve IP License Terms associated with an IP ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPLicenseTerms"
                ],
                "summary": "Get IP License Terms for an IP",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IP ID",
                        "name": "ipId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IPLicenseTermsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/mintingfees": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of LicenseMintingFeePaids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Licenses"
                ],
                "summary": "List LicenseMintingFeePays",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseMintingFeePaidRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseMintingFeePaidsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/mintingfees/{licenseMintingFeePaidId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a LicenseMintingFeePay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Licenses"
                ],
                "summary": "Get a LicenseMintingFeePay",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LicenseMintingFeePay ID",
                        "name": "licenseMintingFeePaidId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseMintingFeePaidResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/templates": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of LicenseTemplates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LicenseTemplates"
                ],
                "summary": "List LicenseTemplates",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTemplatesRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTemplatesResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/templates/{licenseTemplateId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a LicenseTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LicenseTemplates"
                ],
                "summary": "Get a LicenseTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LicenseTemplate ID",
                        "name": "licenseTemplateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTemplateResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/terms": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of LicenseTerms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LicenseTerms"
                ],
                "summary": "List LicenseTerms",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTermsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTermsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/terms/default": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve default license term",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPLicenseTerms"
                ],
                "summary": "Get default license term",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DetailedTermsDefaultResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/terms/{licenseTermId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a LicenseTerm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LicenseTerms"
                ],
                "summary": "Get a LicenseTerm",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LicenseTerm ID",
                        "name": "licenseTermId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTermResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/tokens": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of LicenseTokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LicenseTokens"
                ],
                "summary": "List LicenseTokens",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTokenRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTokensResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/licenses/tokens/{licenseTokenId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a LicenseToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LicenseTokens"
                ],
                "summary": "Get an LicenseToken",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "License Token ID",
                        "name": "licenseTokenId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTokenResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/modules": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of Modules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Modules"
                ],
                "summary": "List Modules",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.ModuleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.ModulesResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/modules/{moduleId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a Module",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Modules"
                ],
                "summary": "Get a Module",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "moduleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.ModuleResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/permissions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of Permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "List Permissions",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.PermissionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.PermissionsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/permissions/{permissionId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a Permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get a Permission",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permissionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.PermissionResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/royalties/payments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of RoyaltyPays",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Royalties"
                ],
                "summary": "List RoyaltyPays",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.RoyaltyPayRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.RoyaltyPaysResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/royalties/payments/{royaltyPayId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a RoyaltyPay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Royalties"
                ],
                "summary": "Get a RoyaltyPay",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "RoyaltyPay ID",
                        "name": "royaltyPayId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.RoyaltyPayResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/transactions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of Transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "List Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber, resourceType or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.TransactionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.TransactionsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/transactions/latest": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of Latest Transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "List Latest Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Parameters must be wrapped in options object and may be empty. OrderBy must be blockNumber, resourceType or empty.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.TransactionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.TransactionsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/transactions/{trxId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get a Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "trxId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.TransactionResponse"
                        }
                    }
                }
            }
        },
        "/hub/v2/assets-with-simple-hash": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated, filtered list of IP Assets with Simple Hash and Metadata Information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAssets"
                ],
                "summary": "List IP Assets with Simple Hash and Metadata Information",
                "parameters": [
                    {
                        "type": "string",
                        "default": "4CWuPKSRTTxC7WvjPNsaZlAqJmrGL7OhNniUrZawdu8",
                        "description": "API Key",
                        "name": "X-Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1516",
                        "description": "Chain Destination",
                        "name": "X-Chain",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "This endpoint is for internal use. If you use the where filter, you should only use where with IpId.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_service_hub.IPAssetWithSimpleHashV2RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_service_hub.IPAssetWithSimpleHashV2Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_storyprotocol_protocol-api_api_internal_client.NFTMetadata": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "collection": {
                    "type": "object",
                    "properties": {
                        "collection_id": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "image_url": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "contract": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "symbol": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "contract_address": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "external_url": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nft_id": {
                    "type": "string"
                },
                "owner_count": {
                    "type": "integer"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "first_acquired_date": {
                                "type": "string"
                            },
                            "last_acquired_date": {
                                "type": "string"
                            },
                            "owner_address": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "previews": {
                    "type": "object",
                    "properties": {
                        "image_large_url": {
                            "type": "string"
                        },
                        "image_medium_url": {
                            "type": "string"
                        },
                        "image_small_url": {
                            "type": "string"
                        }
                    }
                },
                "royalty": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "recipients": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "source": {
                                "type": "string"
                            },
                            "total_creator_fee_basis_points": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "status": {
                    "type": "string"
                },
                "token_count": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Collection": {
            "type": "object",
            "properties": {
                "assetCount": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "cancelledDisputeCount": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "judgedDisputeCount": {
                    "type": "string"
                },
                "licensesCount": {
                    "type": "string"
                },
                "raisedDisputeCount": {
                    "type": "string"
                },
                "resolvedDisputeCount": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.CollectionQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.CollectionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Collection"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.CollectionsRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.CollectionQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.CollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Collection"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.DetailedIPLicenseTermsQueryOptions": {
            "type": "object",
            "properties": {
                "where": {
                    "type": "object",
                    "properties": {
                        "ipIds": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.DetailedIPLicenseTermsRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.DetailedIPLicenseTermsQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Dispute": {
            "type": "object",
            "properties": {
                "arbitrationPolicy": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "currentTag": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "evidenceLink": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "initiator": {
                    "type": "string"
                },
                "targetIpId": {
                    "type": "string"
                },
                "targetTag": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.DisputeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Dispute"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.DisputesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Dispute"
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IPAssetEdgeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IpAssetEdge"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IPLicenseTerm": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "string"
                },
                "blockTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipId": {
                    "type": "string"
                },
                "licenseTemplate": {
                    "type": "string"
                },
                "licenseTermsId": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IPLicenseTermsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IPLicenseTerm"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IpAssetEdge": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "string"
                },
                "blockTime": {
                    "type": "string"
                },
                "ipId": {
                    "type": "string"
                },
                "licenseTemplate": {
                    "type": "string"
                },
                "licenseTermsId": {
                    "type": "string"
                },
                "licenseTokenId": {
                    "type": "string"
                },
                "parentIpId": {
                    "type": "string"
                },
                "transactionHash": {
                    "type": "string"
                },
                "transactionIndex": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IpAssetMetadata": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "metadataHash": {
                    "type": "string"
                },
                "metadataJson": {},
                "metadataUri": {
                    "type": "string"
                },
                "nftMetadataHash": {
                    "type": "string"
                },
                "nftTokenUri": {
                    "type": "string"
                },
                "registrationDate": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseMintingFeePaid": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payer": {
                    "type": "string"
                },
                "receiverIpId": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseMintingFeePaidResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseMintingFeePaid"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseMintingFeePaidsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseMintingFeePaid"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTemplate": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "string"
                },
                "blockTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadataUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTemplateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTemplate"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTemplatesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTemplate"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTerm": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "string"
                },
                "blockTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "licenseTemplate": {
                    "type": "string"
                },
                "licenseTerms": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "terms": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Term"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTermResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTerm"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTermsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTerm"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseToken": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "string"
                },
                "blockTime": {
                    "type": "string"
                },
                "burntAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "licenseTemplate": {
                    "type": "string"
                },
                "licenseTermsId": {
                    "type": "string"
                },
                "licensorIpId": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "transferable": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseToken"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseToken"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Module": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.ModuleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Module"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.ModulesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Module"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Permission": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "func": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.PermissionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Permission"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.PermissionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Permission"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.RoyaltyPay": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payerIpId": {
                    "type": "string"
                },
                "receiverIpId": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.RoyaltyPayResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.RoyaltyPay"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.RoyaltyPaysResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.RoyaltyPay"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Term": {
            "type": "object",
            "properties": {
                "commercialAttribution": {
                    "type": "boolean"
                },
                "commercialRevCeiling": {
                    "type": "integer"
                },
                "commercialRevShare": {
                    "type": "integer"
                },
                "commercialUse": {
                    "type": "boolean"
                },
                "commercializerChecker": {
                    "type": "string"
                },
                "commercializerCheckerData": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "defaultMintingFee": {
                    "type": "integer"
                },
                "derivativeRevCeiling": {
                    "type": "integer"
                },
                "derivativesAllowed": {
                    "type": "boolean"
                },
                "derivativesApproval": {
                    "type": "boolean"
                },
                "derivativesAttribution": {
                    "type": "boolean"
                },
                "derivativesReciprocal": {
                    "type": "boolean"
                },
                "expiration": {
                    "type": "integer"
                },
                "royaltyPolicy": {
                    "type": "string"
                },
                "transferable": {
                    "type": "boolean"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Transaction": {
            "type": "object",
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "initiator": {
                    "type": "string"
                },
                "ipId": {
                    "type": "string"
                },
                "logIndex": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "transactionIndex": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.TransactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Transaction"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.TransactionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Transaction"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DetailedTerms": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "ipId": {
                    "type": "string"
                },
                "licenseTemplate": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.LicenseTemplate"
                },
                "licenseTemplateId": {
                    "type": "string"
                },
                "terms": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.Term"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DetailedTermsDefaultResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DetailedTerms"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DetailedTermsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DetailedTerms"
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DisputeQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "targetIpId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DisputeRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.DisputeQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPAsset": {
            "type": "object",
            "properties": {
                "ancestorCount": {
                    "type": "integer"
                },
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "childIpIds": {
                    "type": "string"
                },
                "childrenCount": {
                    "type": "integer"
                },
                "contractVersion": {
                    "type": "string"
                },
                "descendantCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "ipId": {
                    "type": "string"
                },
                "isGroup": {
                    "type": "boolean"
                },
                "nftMetadata": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.NftMetadata"
                },
                "parentCount": {
                    "type": "integer"
                },
                "parentIpIds": {
                    "type": "string"
                },
                "rootIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "transactionHash": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPAssetResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPAsset"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPAssetsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPAsset"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroup": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "ip_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupEdge": {
            "type": "object",
            "properties": {
                "block_number": {
                    "type": "string"
                },
                "block_time": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "ip_id": {
                    "type": "string"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupEdgesQueryOptions": {
            "type": "object",
            "properties": {
                "ipAssetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "tokenContractIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "groupId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupEdgesRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupEdgesQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupEdgesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupEdge"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupsQueryOptions": {
            "type": "object",
            "properties": {
                "ipAssetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "tokenContractIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "groupId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupsRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupsQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroupsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPGroup"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPLicenseTermsQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "ipId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPLicenseTermsRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IPLicenseTermsQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IpAssetEdgeQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "ipId": {
                            "type": "string"
                        },
                        "licenseTermsId": {
                            "type": "string"
                        },
                        "licenseTokenId": {
                            "type": "string"
                        },
                        "parentIpId": {
                            "type": "string"
                        },
                        "transactionHash": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IpAssetEdgeRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IpAssetEdgeQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IpAssetQueryOptions": {
            "type": "object",
            "properties": {
                "ipAssetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "tokenContractIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "ipId": {
                            "type": "string"
                        },
                        "tokenContract": {
                            "type": "string"
                        },
                        "tokenId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IpAssetRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.IpAssetQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseMintingFeePaidQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "receiverIpId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseMintingFeePaidRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseMintingFeePaidQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTemplatesQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTemplatesRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTemplatesQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTermsQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTermsRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTermsQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTokenQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "licenseTermsId": {
                            "type": "string"
                        },
                        "licensorIpId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTokenRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.LicenseTokenQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.ModuleQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.ModuleRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.ModuleQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.NftMetadata": {
            "type": "object",
            "properties": {
                "chainId": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tokenContract": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                },
                "tokenUri": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.PermissionQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "ipAccount": {
                            "type": "string"
                        },
                        "ipAccountOwner": {
                            "type": "string"
                        },
                        "to": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.PermissionRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.PermissionQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.RoyaltyPayQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "payerIpId": {
                            "type": "string"
                        },
                        "receiverIpId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.RoyaltyPayRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.RoyaltyPayQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.TransactionRequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.TrxQueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.TrxQueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "id",
                        "blockNumber",
                        "ipId",
                        "resourceType"
                    ]
                },
                "orderDirection": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "blockNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "ipId": {
                            "type": "string"
                        },
                        "resourceType": {
                            "type": "string"
                        },
                        "transactionHash": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_service_hub.IPAssetWithSimpleHashV2": {
            "type": "object",
            "properties": {
                "ancestorCount": {
                    "type": "integer"
                },
                "blockNumber": {
                    "type": "string"
                },
                "blockTimestamp": {
                    "type": "string"
                },
                "childIpIds": {
                    "type": "string"
                },
                "childrenCount": {
                    "type": "integer"
                },
                "contractVersion": {
                    "type": "string"
                },
                "descendantCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "ipAssetMetadata": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv1.IpAssetMetadata"
                },
                "ipId": {
                    "type": "string"
                },
                "isGroup": {
                    "type": "boolean"
                },
                "nftMetadata": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_models_protocolv2.NftMetadata"
                },
                "parentCount": {
                    "type": "integer"
                },
                "parentIpIds": {
                    "type": "string"
                },
                "rootIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "simpleHashMetadata": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_client.NFTMetadata"
                },
                "transactionHash": {
                    "type": "string"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_service_hub.IPAssetWithSimpleHashV2QueryOptions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "after": {
                            "type": "string"
                        },
                        "before": {
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    }
                },
                "where": {
                    "type": "object",
                    "properties": {
                        "ipId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_service_hub.IPAssetWithSimpleHashV2RequestBody": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_service_hub.IPAssetWithSimpleHashV2QueryOptions"
                }
            }
        },
        "github_com_storyprotocol_protocol-api_api_internal_service_hub.IPAssetWithSimpleHashV2Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_storyprotocol_protocol-api_api_internal_service_hub.IPAssetWithSimpleHashV2"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        }
    }
}