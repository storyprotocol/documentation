{
  "swagger": "2.0",
  "info": {
    "title": "Story Protocol API Reference",
    "contact": {},
    "version": "v1"
  },
  "host": "api.storyprotocol.net",
  "paths": {
    "/api/v1/assets": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of IPAssets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPAssets"],
        "summary": "List IPAssets",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.IpAssetRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IPAssetsResponse"
            }
          }
        }
      }
    },
    "/api/v1/assets/edges": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of IP Edges",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPAssets"],
        "summary": "List IP Edges",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.IpAssetEdgeRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/protocolv1.IpAssetEdge"
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{assetId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve an IPAsset",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPAssets"],
        "summary": "Get an IPAsset",
        "parameters": [
          {
            "type": "string",
            "description": "Asset ID",
            "name": "assetId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IPAssetResponse"
            }
          }
        }
      }
    },
    "/api/v1/assets/{assetId}/metadata": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve metadata for an IPAsset",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPAssets"],
        "summary": "Get metadata for an IPAsset",
        "parameters": [
          {
            "type": "string",
            "description": "Asset ID",
            "name": "assetId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IpAssetMetadata"
            }
          }
        }
      }
    },
    "/api/v1/collections": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Collections",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Collections"],
        "summary": "List Collections",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.CollectionsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.CollectionsResponse"
            }
          }
        }
      }
    },
    "/api/v1/collections/{collectionId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Collection",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Collections"],
        "summary": "Get an Collection",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Collection ID",
            "name": "collectionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.CollectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/disputes": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Disputes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Disputes"],
        "summary": "List Disputes",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.DisputeRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.DisputesResponse"
            }
          }
        }
      }
    },
    "/api/v1/disputes/{disputeId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Dispute",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Disputes"],
        "summary": "Get a Dispute",
        "parameters": [
          {
            "type": "string",
            "description": "Dispute ID",
            "name": "disputeId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.DisputeResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/ip/terms": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of IPLicenseTerms",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPLicenseTerms"],
        "summary": "List IPLicenseTerms",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.IPLicenseTermsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IPLicenseTermsResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/ip/terms/{ipId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve IP License Terms associated with an IP ID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPLicenseTerms"],
        "summary": "Get IP License Terms for an IP",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "IP ID",
            "name": "ipId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IPLicenseTermsResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/mintingfees": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of LicenseMintingFeePaids",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Licenses"],
        "summary": "List LicenseMintingFeePays",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseMintingFeePaidRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseMintingFeePaidsResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/mintingfees/{licenseMintingFeePaidId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a LicenseMintingFeePay",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Licenses"],
        "summary": "Get a LicenseMintingFeePay",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "LicenseMintingFeePay ID",
            "name": "licenseMintingFeePaidId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseMintingFeePaidResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/templates": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of LicenseTemplates",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTemplates"],
        "summary": "List LicenseTemplates",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTemplatesRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTemplatesResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/templates/{licenseTemplateId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a LicenseTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTemplates"],
        "summary": "Get a LicenseTemplate",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "LicenseTemplate ID",
            "name": "licenseTemplateId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTemplateResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/terms": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of LicenseTerms",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTerms"],
        "summary": "List LicenseTerms",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTermsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTermsResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/terms/{licenseTermId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a LicenseTerm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTerms"],
        "summary": "Get a LicenseTerm",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "LicenseTerm ID",
            "name": "licenseTermId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTermResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/tokens": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of LicenseTokens",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTokens"],
        "summary": "List LicenseTokens",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTokenRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTokensResponse"
            }
          }
        }
      }
    },
    "/api/v1/licenses/tokens/{licenseTokenId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a LicenseToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTokens"],
        "summary": "Get an LicenseToken",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "License Token ID",
            "name": "licenseTokenId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTokenResponse"
            }
          }
        }
      }
    },
    "/api/v1/modules": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Modules",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Modules"],
        "summary": "List Modules",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.ModuleRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.ModulesResponse"
            }
          }
        }
      }
    },
    "/api/v1/modules/{moduleId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Module",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Modules"],
        "summary": "Get a Module",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Module ID",
            "name": "moduleId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.ModuleResponse"
            }
          }
        }
      }
    },
    "/api/v1/permissions": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Permissions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Permissions"],
        "summary": "List Permissions",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.PermissionRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.PermissionsResponse"
            }
          }
        }
      }
    },
    "/api/v1/permissions/{permissionId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Permission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Permissions"],
        "summary": "Get a Permission",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Permission ID",
            "name": "permissionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.PermissionResponse"
            }
          }
        }
      }
    },
    "/api/v1/royalties/payments": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of RoyaltyPays",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Royalties"],
        "summary": "List RoyaltyPays",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPayRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPaysResponse"
            }
          }
        }
      }
    },
    "/api/v1/royalties/payments/{royaltyPayId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a RoyaltyPay",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Royalties"],
        "summary": "Get a RoyaltyPay",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "RoyaltyPay ID",
            "name": "royaltyPayId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPayResponse"
            }
          }
        }
      }
    },
    "/api/v1/royalties/policies": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of RoyaltyPolicies",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Royalties"],
        "summary": "List RoyaltyPolicies",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPolicyRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPoliciesResponse"
            }
          }
        }
      }
    },
    "/api/v1/royalties/policies/{royaltyPolicyId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a RoyaltyPolicy",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Royalties"],
        "summary": "Get a RoyaltyPolicy",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Royalty Policy ID",
            "name": "royaltyPolicyId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/transactions": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Transactions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Transactions"],
        "summary": "List Transactions",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (orderBy can be: id, blockNumber, blockTime, actionType, initiator, ipId, resourceId, resourceType)",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.TransactionRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.TransactionsResponse"
            }
          }
        }
      }
    },
    "/api/v1/transactions/{trxId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Transaction",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Transactions"],
        "summary": "Get a Transaction",
        "parameters": [
          {
            "type": "string",
            "description": "Transaction ID",
            "name": "trxId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.TransactionResponse"
            }
          }
        }
      }
    },
    "/api/v2/assets": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of IPAssets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPAssets"],
        "summary": "List IPAssets",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.IpAssetRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IPAssetsResponse"
            }
          }
        }
      }
    },
    "/api/v2/assets/edges": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of IP Edges",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPAssets"],
        "summary": "List IP Edges",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.IpAssetEdgeRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/protocolv1.IpAssetEdge"
              }
            }
          }
        }
      }
    },
    "/api/v2/assets/{assetId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve an IPGroup edges",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPGroup"],
        "summary": "List a I",
        "parameters": [
          {
            "type": "string",
            "description": "Asset ID",
            "name": "assetId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv2.IPGroupsResponse"
            }
          }
        }
      }
    },
    "/api/v2/assets/{assetId}/metadata": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve metadata for an IPAsset",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPAssets"],
        "summary": "Get metadata for an IPAsset",
        "parameters": [
          {
            "type": "string",
            "description": "Asset ID",
            "name": "assetId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IpAssetMetadata"
            }
          }
        }
      }
    },
    "/api/v2/collections": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Collections",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Collections"],
        "summary": "List Collections",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.CollectionsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.CollectionsResponse"
            }
          }
        }
      }
    },
    "/api/v2/collections/{collectionId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Collection",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Collections"],
        "summary": "Get an Collection",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Collection ID",
            "name": "collectionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.CollectionResponse"
            }
          }
        }
      }
    },
    "/api/v2/disputes": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Disputes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Disputes"],
        "summary": "List Disputes",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.DisputeRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.DisputesResponse"
            }
          }
        }
      }
    },
    "/api/v2/disputes/{disputeId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Dispute",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Disputes"],
        "summary": "Get a Dispute",
        "parameters": [
          {
            "type": "string",
            "description": "Dispute ID",
            "name": "disputeId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.DisputeResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/ip/terms": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of IPLicenseTerms",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPLicenseTerms"],
        "summary": "List IPLicenseTerms",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.IPLicenseTermsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IPLicenseTermsResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/ip/terms/{ipId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve IP License Terms associated with an IP ID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["IPLicenseTerms"],
        "summary": "Get IP License Terms for an IP",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "IP ID",
            "name": "ipId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.IPLicenseTermsResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/mintingfees": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of LicenseMintingFeePaids",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Licenses"],
        "summary": "List LicenseMintingFeePays",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseMintingFeePaidRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseMintingFeePaidsResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/mintingfees/{licenseMintingFeePaidId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a LicenseMintingFeePay",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Licenses"],
        "summary": "Get a LicenseMintingFeePay",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "LicenseMintingFeePay ID",
            "name": "licenseMintingFeePaidId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseMintingFeePaidResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/templates": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of LicenseTemplates",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTemplates"],
        "summary": "List LicenseTemplates",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTemplatesRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTemplatesResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/templates/{licenseTemplateId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a LicenseTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTemplates"],
        "summary": "Get a LicenseTemplate",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "LicenseTemplate ID",
            "name": "licenseTemplateId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTemplateResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/terms": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of LicenseTerms",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTerms"],
        "summary": "List LicenseTerms",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTermsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTermsResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/terms/{licenseTermId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a LicenseTerm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTerms"],
        "summary": "Get a LicenseTerm",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "LicenseTerm ID",
            "name": "licenseTermId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTermResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/tokens": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of LicenseTokens",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTokens"],
        "summary": "List LicenseTokens",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTokenRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTokensResponse"
            }
          }
        }
      }
    },
    "/api/v2/licenses/tokens/{licenseTokenId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a LicenseToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["LicenseTokens"],
        "summary": "Get an LicenseToken",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "License Token ID",
            "name": "licenseTokenId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.LicenseTokenResponse"
            }
          }
        }
      }
    },
    "/api/v2/modules": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Modules",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Modules"],
        "summary": "List Modules",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.ModuleRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.ModulesResponse"
            }
          }
        }
      }
    },
    "/api/v2/modules/{moduleId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Module",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Modules"],
        "summary": "Get a Module",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Module ID",
            "name": "moduleId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.ModuleResponse"
            }
          }
        }
      }
    },
    "/api/v2/permissions": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Permissions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Permissions"],
        "summary": "List Permissions",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.PermissionRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.PermissionsResponse"
            }
          }
        }
      }
    },
    "/api/v2/permissions/{permissionId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Permission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Permissions"],
        "summary": "Get a Permission",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Permission ID",
            "name": "permissionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.PermissionResponse"
            }
          }
        }
      }
    },
    "/api/v2/royalties/payments": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of RoyaltyPays",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Royalties"],
        "summary": "List RoyaltyPays",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPayRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPaysResponse"
            }
          }
        }
      }
    },
    "/api/v2/royalties/payments/{royaltyPayId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a RoyaltyPay",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Royalties"],
        "summary": "Get a RoyaltyPay",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "RoyaltyPay ID",
            "name": "royaltyPayId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPayResponse"
            }
          }
        }
      }
    },
    "/api/v2/royalties/policies": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of RoyaltyPolicies",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Royalties"],
        "summary": "List RoyaltyPolicies",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPolicyRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPoliciesResponse"
            }
          }
        }
      }
    },
    "/api/v2/royalties/policies/{royaltyPolicyId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a RoyaltyPolicy",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Royalties"],
        "summary": "Get a RoyaltyPolicy",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Royalty Policy ID",
            "name": "royaltyPolicyId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.RoyaltyPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v2/transactions": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a paginated, filtered list of Transactions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Transactions"],
        "summary": "List Transactions",
        "parameters": [
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          },
          {
            "description": "Query Parameters (orderBy can be: id, blockNumber, blockTime, actionType, initiator, ipId, resourceId, resourceType)",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolv1.TransactionRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.TransactionsResponse"
            }
          }
        }
      }
    },
    "/api/v2/transactions/{trxId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieve a Transaction",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Transactions"],
        "summary": "Get a Transaction",
        "parameters": [
          {
            "type": "string",
            "description": "Transaction ID",
            "name": "trxId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API Key",
            "name": "X-Api-Key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Chain Destination",
            "name": "X-Chain",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/protocolv1.TransactionResponse"
            }
          }
        }
      }
    },
    "/webhook/v1/update-generate-image": {
      "post": {
        "description": "Handle webhook callbacks from Replicate for image generation jobs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Webhook"],
        "summary": "Process Replicate webhook",
        "parameters": [
          {
            "description": "Webhook payload",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hub.ReplicateWebhookPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/hub.SuccessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/hub.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/hub.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/hub.ErrorResponse"
            }
          }
        }
      }
    },
    "/webhook/v1/update-model-finetune": {
      "post": {
        "description": "Handle webhook callbacks from Replicate for model fine-tuning jobs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Webhook"],
        "summary": "Process Replicate webhook for model fine-tuning",
        "parameters": [
          {
            "description": "Webhook payload",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hub.ReplicateWebhookPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/hub.SuccessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/hub.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/hub.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/hub.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "auth.APIKey": {
      "description": "API key information",
      "type": "object",
      "properties": {
        "api_key": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "entity": {
          "description": "Join Relationships",
          "allOf": [
            {
              "$ref": "#/definitions/auth.Entity"
            }
          ]
        },
        "entity_id": {
          "description": "FK",
          "type": "string"
        },
        "rate_limit_rule": {
          "$ref": "#/definitions/auth.RateLimit"
        },
        "rate_limit_rule_id": {
          "type": "integer"
        },
        "role": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "updated_time": {
          "type": "string"
        }
      }
    },
    "auth.EntitiesResponse": {
      "description": "Response containing a list of entities",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auth.Entity"
          }
        },
        "limit": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "auth.Entity": {
      "description": "Entity information",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "auth.EntityCreateRequest": {
      "description": "Request body for creating an entity",
      "type": "object",
      "required": ["name"],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "auth.EntityResponse": {
      "description": "Response containing entity data",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/auth.Entity"
        }
      }
    },
    "auth.ErrorResponse": {
      "description": "Error response structure",
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "auth.RateLimit": {
      "description": "Rate limit rule information",
      "type": "object",
      "properties": {
        "burst_capacity": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "requests_per_unit": {
          "type": "integer"
        },
        "unit": {
          "description": "\"1s\", \"3m\", \"4h\", etc.",
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "auth.RateLimitCreateRequest": {
      "description": "Request body for creating a rate limit",
      "type": "object",
      "required": ["burst_capacity", "name", "requests_per_unit", "unit"],
      "properties": {
        "burst_capacity": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "requests_per_unit": {
          "type": "integer"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "auth.RateLimitResponse": {
      "description": "Response containing rate limit data",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/auth.RateLimit"
        }
      }
    },
    "auth.RateLimitsResponse": {
      "description": "Response containing a list of rate limits",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auth.RateLimit"
          }
        },
        "limit": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "hub.Collection": {
      "type": "object",
      "properties": {
        "chain": {
          "type": "string"
        },
        "chain_id": {
          "type": "string"
        },
        "collection_address": {
          "type": "string"
        },
        "collection_banner": {
          "type": "string"
        },
        "collection_description": {
          "type": "string"
        },
        "collection_name": {
          "type": "string"
        },
        "collection_thumb": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "tx_hash": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "hub.CreateFineTuneModelRequest": {
      "type": "object",
      "properties": {
        "base_model_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "hub.CreateRateLimitRequest": {
      "type": "object",
      "required": [
        "burst_capacity",
        "name",
        "requests_per_unit",
        "unit",
        "user_id"
      ],
      "properties": {
        "burst_capacity": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "requests_per_unit": {
          "type": "integer"
        },
        "unit": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "hub.EditCollectionRequest": {
      "type": "object",
      "properties": {
        "collection_banner": {
          "type": "string"
        },
        "collection_description": {
          "type": "string"
        },
        "collection_name": {
          "type": "string"
        },
        "collection_thumb": {
          "type": "string"
        }
      }
    },
    "hub.EmailCheckResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        }
      }
    },
    "hub.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "hub.ExternalEntity": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "description": "Join Relationships",
          "allOf": [
            {
              "$ref": "#/definitions/hub.User"
            }
          ]
        },
        "user_id": {
          "description": "FK",
          "type": "integer"
        },
        "vendor": {
          "type": "string"
        },
        "verifiedCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hub.VerifiedCredential"
          }
        }
      }
    },
    "hub.FavoriteIPAssetRequest": {
      "type": "object",
      "required": ["asset_id"],
      "properties": {
        "asset_id": {
          "type": "string"
        }
      }
    },
    "hub.FavoriteIPAssetResponse": {
      "type": "object",
      "properties": {
        "is_favorited": {
          "type": "boolean"
        }
      }
    },
    "hub.GenerateImageRequest": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer"
        },
        "image_url": {
          "type": "string"
        },
        "model_id": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "hub.GenerateImageResponse": {
      "type": "object",
      "properties": {
        "image_urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "hub.HubRateLimit": {
      "type": "object",
      "properties": {
        "burst_capacity": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "requests_per_unit": {
          "type": "integer"
        },
        "unit": {
          "description": "\"1s\", \"3m\", \"4h\", etc.",
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "description": "Join Relationships",
          "allOf": [
            {
              "$ref": "#/definitions/hub.User"
            }
          ]
        },
        "user_id": {
          "description": "FK",
          "type": "integer"
        }
      }
    },
    "hub.IPAsset": {
      "type": "object",
      "properties": {
        "blacklisted": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "favorite_count": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "hub.ImageGenerationJob": {
      "type": "object",
      "properties": {
        "completed_at": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "input_image_url": {
          "type": "string"
        },
        "output": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prediction_id": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/hub.ImageGenerationJobStatus"
        },
        "user": {
          "$ref": "#/definitions/hub.User"
        },
        "user_id": {
          "type": "integer"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "hub.ImageGenerationJobStatus": {
      "type": "string",
      "enum": ["starting", "processing", "succeeded", "failed", "canceled"],
      "x-enum-varnames": [
        "JobStatusStarting",
        "JobStatusProcessing",
        "JobStatusSucceeded",
        "JobStatusFailed",
        "JobStatusCanceled"
      ]
    },
    "hub.InitiateImageGenerationResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/hub.ImageGenerationJobStatus"
        }
      }
    },
    "hub.ListIPAssetsByTagsRequest": {
      "type": "object",
      "required": ["tag_ids"],
      "properties": {
        "limit": {
          "type": "integer"
        },
        "need_extend_asset": {
          "type": "boolean"
        },
        "order_by": {
          "type": "string"
        },
        "order_direction": {
          "type": "string"
        },
        "skip": {
          "type": "integer"
        },
        "sort_by_favorites": {
          "type": "boolean"
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "hub.Model": {
      "type": "object",
      "properties": {
        "base_model_id": {
          "type": "string"
        },
        "cancel_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ip_id": {
          "type": "string"
        },
        "model_name": {
          "type": "string"
        },
        "model_owner": {
          "type": "string"
        },
        "model_version": {
          "type": "string"
        },
        "platform": {
          "$ref": "#/definitions/hub.ModelPlatform"
        },
        "status": {
          "$ref": "#/definitions/hub.ModelStatus"
        },
        "status_url": {
          "type": "string"
        },
        "token_string": {
          "type": "string"
        },
        "training_completed_at": {
          "type": "string"
        },
        "training_data_url": {
          "type": "string"
        },
        "training_input": {
          "type": "string"
        },
        "training_job_id": {
          "type": "string"
        },
        "training_started_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        },
        "weights_url": {
          "type": "string"
        }
      }
    },
    "hub.ModelPlatform": {
      "type": "string",
      "enum": ["replicate"],
      "x-enum-varnames": ["ModelPlatformReplicate"]
    },
    "hub.ModelStatus": {
      "type": "string",
      "enum": [
        "pending",
        "training",
        "active",
        "inactive",
        "failed",
        "canceled"
      ],
      "x-enum-varnames": [
        "ModelStatusPending",
        "ModelStatusTraining",
        "ModelStatusActive",
        "ModelStatusInactive",
        "ModelStatusFailed",
        "ModelStatusCanceled"
      ]
    },
    "hub.RegisterModelRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "ip_id": {
          "type": "string"
        },
        "model_name": {
          "type": "string"
        },
        "model_owner": {
          "type": "string"
        },
        "model_version": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "hub.ReplicateWebhookPayload": {
      "type": "object",
      "properties": {
        "completed_at": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "output": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "hub.SuccessResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "hub.TrainFineTuneModelRequest": {
      "type": "object",
      "properties": {
        "input_image_urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model_id": {
          "type": "string"
        },
        "train_with_face_detection": {
          "type": "boolean"
        },
        "trigger_word": {
          "type": "string"
        }
      }
    },
    "hub.UpdateProfileRequest": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "banner": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "twitter": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "hub.UploadCollectionRequest": {
      "type": "object",
      "required": ["chain", "chain_id", "collection_address", "tx_hash"],
      "properties": {
        "chain": {
          "type": "string"
        },
        "chain_id": {
          "type": "string"
        },
        "collection_address": {
          "type": "string"
        },
        "collection_banner": {
          "type": "string"
        },
        "collection_description": {
          "type": "string"
        },
        "collection_name": {
          "type": "string"
        },
        "collection_thumb": {
          "type": "string"
        },
        "tx_hash": {
          "type": "string"
        }
      }
    },
    "hub.UploadFileResponse": {
      "type": "object",
      "properties": {
        "file_url": {
          "type": "string"
        }
      }
    },
    "hub.UpsertIPAssetBlacklistRequest": {
      "type": "object",
      "required": ["asset_id", "blacklisted"],
      "properties": {
        "asset_id": {
          "type": "string"
        },
        "blacklisted": {
          "type": "boolean"
        }
      }
    },
    "hub.User": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "banner": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "externalEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hub.ExternalEntity"
          }
        },
        "first_name": {
          "type": "string"
        },
        "hubRateLimitRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hub.HubRateLimit"
          }
        },
        "id": {
          "type": "integer"
        },
        "imageGenerationJobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hub.ImageGenerationJob"
          }
        },
        "last_name": {
          "type": "string"
        },
        "twitter": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "userUploadedCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hub.UserUploadedCollection"
          }
        },
        "username": {
          "type": "string"
        }
      }
    },
    "hub.UserUploadedCollection": {
      "type": "object",
      "properties": {
        "chain": {
          "type": "string"
        },
        "chain_id": {
          "type": "string"
        },
        "collection_address": {
          "type": "string"
        },
        "collection_banner": {
          "type": "string"
        },
        "collection_description": {
          "type": "string"
        },
        "collection_name": {
          "type": "string"
        },
        "collection_thumb": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "tx_hash": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/hub.User"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "hub.UsernameCheckResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        }
      }
    },
    "hub.VerifiedCredential": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "chain": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "externalEntity": {
          "description": "Join Relationships",
          "allOf": [
            {
              "$ref": "#/definitions/hub.ExternalEntity"
            }
          ]
        },
        "external_entity_id": {
          "description": "FK",
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "public_identifier": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "protocolv1.Collection": {
      "type": "object",
      "properties": {
        "assetCount": {
          "type": "string"
        },
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "cancelledDisputeCount": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "judgedDisputeCount": {
          "type": "string"
        },
        "licensesCount": {
          "type": "string"
        },
        "raisedDisputeCount": {
          "type": "string"
        },
        "resolvedDisputeCount": {
          "type": "string"
        }
      }
    },
    "protocolv1.CollectionQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object"
        }
      }
    },
    "protocolv1.CollectionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.Collection"
        }
      }
    },
    "protocolv1.CollectionsRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.CollectionQueryOptions"
        }
      }
    },
    "protocolv1.CollectionsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.Collection"
          }
        }
      }
    },
    "protocolv1.Dispute": {
      "type": "object",
      "properties": {
        "arbitrationPolicy": {
          "type": "string"
        },
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "currentTag": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "evidenceLink": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "initiator": {
          "type": "string"
        },
        "targetIpId": {
          "type": "string"
        },
        "targetTag": {
          "type": "string"
        }
      }
    },
    "protocolv1.DisputeQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "currentTag": {
              "type": "string"
            },
            "initiator": {
              "type": "string"
            },
            "targetIpId": {
              "type": "string"
            },
            "targetTag": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.DisputeRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.DisputeQueryOptions"
        }
      }
    },
    "protocolv1.DisputeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.Dispute"
        }
      }
    },
    "protocolv1.DisputesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.Dispute"
          }
        }
      }
    },
    "protocolv1.IPAsset": {
      "type": "object",
      "properties": {
        "ancestorCount": {
          "type": "integer"
        },
        "blacklisted": {
          "type": "boolean"
        },
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "childIpIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "childIps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.IPAsset"
          }
        },
        "childrenCount": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string"
        },
        "descendantCount": {
          "type": "integer"
        },
        "favoriteCount": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        },
        "metadataDecoded": {
          "$ref": "#/definitions/protocolv1.Metadata"
        },
        "nftMetadata": {
          "$ref": "#/definitions/protocolv1.NftMetadata"
        },
        "parentCount": {
          "type": "integer"
        },
        "parentIpIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentIps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.IPAsset"
          }
        },
        "rootIpIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rootIps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.IPAsset"
          }
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "protocolv1.IPAssetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.IPAsset"
        }
      }
    },
    "protocolv1.IPAssetsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.IPAsset"
          }
        }
      }
    },
    "protocolv1.IPLicenseTerm": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string"
        },
        "blockTime": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ipId": {
          "type": "string"
        },
        "licenseTemplate": {
          "type": "string"
        },
        "licenseTermsId": {
          "type": "string"
        }
      }
    },
    "protocolv1.IPLicenseTermsQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "blockNumber": {
              "type": "string"
            },
            "ipId": {
              "type": "string"
            },
            "licenseTemplate": {
              "type": "string"
            },
            "licenseTermsId": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.IPLicenseTermsRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.IPLicenseTermsQueryOptions"
        }
      }
    },
    "protocolv1.IPLicenseTermsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.IPLicenseTerm"
          }
        }
      }
    },
    "protocolv1.IpAssetEdge": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string"
        },
        "blockTime": {
          "type": "string"
        },
        "ipId": {
          "type": "string"
        },
        "licenseTemplate": {
          "type": "string"
        },
        "licenseTermsId": {
          "type": "string"
        },
        "licenseTokenId": {
          "type": "string"
        },
        "parentIpId": {
          "type": "string"
        },
        "transactionHash": {
          "type": "string"
        },
        "transactionIndex": {
          "type": "string"
        }
      }
    },
    "protocolv1.IpAssetEdgeQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "blockNumber": {
              "type": "string"
            },
            "blockTime": {
              "type": "string"
            },
            "ipId": {
              "type": "string"
            },
            "licenseTemplate": {
              "type": "string"
            },
            "licenseTermsId": {
              "type": "string"
            },
            "licenseTokenId": {
              "type": "string"
            },
            "parentIpId": {
              "type": "string"
            },
            "transactionHash": {
              "type": "string"
            },
            "transactionIndex": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.IpAssetEdgeRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.IpAssetEdgeQueryOptions"
        }
      }
    },
    "protocolv1.IpAssetMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "metadataHash": {
          "type": "string"
        },
        "metadataJson": {},
        "metadataUri": {
          "type": "string"
        },
        "nftMetadataHash": {
          "type": "string"
        },
        "nftTokenUri": {
          "type": "string"
        },
        "registrationDate": {
          "type": "string"
        }
      }
    },
    "protocolv1.IpAssetQueryOptions": {
      "type": "object",
      "properties": {
        "ipAssetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "tokenContractIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokenIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "ancestorCount": {
              "type": "string"
            },
            "chainId": {
              "type": "string"
            },
            "descendantCount": {
              "type": "string"
            },
            "metadataResolverAddress": {
              "type": "string"
            },
            "tokenContract": {
              "type": "string"
            },
            "tokenId": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.IpAssetRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.IpAssetQueryOptions"
        }
      }
    },
    "protocolv1.LicenseMintingFeePaid": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "payer": {
          "type": "string"
        },
        "receiverIpId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "protocolv1.LicenseMintingFeePaidQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "payer": {
              "type": "string"
            },
            "receiverIpId": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.LicenseMintingFeePaidRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.LicenseMintingFeePaidQueryOptions"
        }
      }
    },
    "protocolv1.LicenseMintingFeePaidResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.LicenseMintingFeePaid"
        }
      }
    },
    "protocolv1.LicenseMintingFeePaidsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.LicenseMintingFeePaid"
          }
        }
      }
    },
    "protocolv1.LicenseTemplate": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string"
        },
        "blockTime": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadataUri": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "protocolv1.LicenseTemplateResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.LicenseTemplate"
        }
      }
    },
    "protocolv1.LicenseTemplatesQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.LicenseTemplatesRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.LicenseTemplatesQueryOptions"
        }
      }
    },
    "protocolv1.LicenseTemplatesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.LicenseTemplate"
          }
        }
      }
    },
    "protocolv1.LicenseTerm": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string"
        },
        "blockTime": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "licenseTemplate": {
          "type": "string"
        },
        "licenseTerms": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "terms": {
          "$ref": "#/definitions/protocolv1.Term"
        }
      }
    },
    "protocolv1.LicenseTermResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.LicenseTerm"
        }
      }
    },
    "protocolv1.LicenseTermsQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "licenseTemplate": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.LicenseTermsRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.LicenseTermsQueryOptions"
        }
      }
    },
    "protocolv1.LicenseTermsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.LicenseTerm"
          }
        }
      }
    },
    "protocolv1.LicenseToken": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string"
        },
        "blockTime": {
          "type": "string"
        },
        "burntAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "licenseTemplate": {
          "type": "string"
        },
        "licenseTermsId": {
          "type": "string"
        },
        "licensorIpId": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "transferable": {
          "type": "string"
        }
      }
    },
    "protocolv1.LicenseTokenQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "licenseTemplate": {
              "type": "string"
            },
            "licenseTermsId": {
              "type": "string"
            },
            "licensorIpId": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "transferable": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "protocolv1.LicenseTokenRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.LicenseTokenQueryOptions"
        }
      }
    },
    "protocolv1.LicenseTokenResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.LicenseToken"
        }
      }
    },
    "protocolv1.LicenseTokensResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.LicenseToken"
          }
        }
      }
    },
    "protocolv1.Metadata": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "registrant": {
          "type": "string"
        },
        "registration_date": {
          "type": "integer"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "protocolv1.Module": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "protocolv1.ModuleQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.ModuleRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.ModuleQueryOptions"
        }
      }
    },
    "protocolv1.ModuleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.Module"
        }
      }
    },
    "protocolv1.ModulesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.Module"
          }
        }
      }
    },
    "protocolv1.NftMetadata": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tokenContract": {
          "type": "string"
        },
        "tokenId": {
          "type": "string"
        },
        "tokenUri": {
          "type": "string"
        }
      }
    },
    "protocolv1.Permission": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "func": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "permission": {
          "type": "string"
        },
        "signer": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "protocolv1.PermissionQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "signer": {
              "type": "string"
            },
            "to": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.PermissionRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.PermissionQueryOptions"
        }
      }
    },
    "protocolv1.PermissionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.Permission"
        }
      }
    },
    "protocolv1.PermissionsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.Permission"
          }
        }
      }
    },
    "protocolv1.RoyaltyPay": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "payerIpId": {
          "type": "string"
        },
        "receiverIpId": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "protocolv1.RoyaltyPayQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "payerIpId": {
              "type": "string"
            },
            "receiverIpId": {
              "type": "string"
            },
            "sender": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.RoyaltyPayRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.RoyaltyPayQueryOptions"
        }
      }
    },
    "protocolv1.RoyaltyPayResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.RoyaltyPay"
        }
      }
    },
    "protocolv1.RoyaltyPaysResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.RoyaltyPay"
          }
        }
      }
    },
    "protocolv1.RoyaltyPoliciesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.RoyaltyPolicy"
          }
        }
      }
    },
    "protocolv1.RoyaltyPolicy": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ipRoyaltyVault": {
          "type": "string"
        },
        "royaltyStack": {
          "type": "string"
        }
      }
    },
    "protocolv1.RoyaltyPolicyQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string"
        },
        "orderDirection": {
          "type": "string"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "ipId": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv1.RoyaltyPolicyRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.RoyaltyPolicyQueryOptions"
        }
      }
    },
    "protocolv1.RoyaltyPolicyResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.RoyaltyPolicy"
        }
      }
    },
    "protocolv1.Term": {
      "type": "object",
      "properties": {
        "commercialAttribution": {
          "type": "boolean"
        },
        "commercialRevCeiling": {
          "type": "integer"
        },
        "commercialRevShare": {
          "type": "integer"
        },
        "commercialUse": {
          "type": "boolean"
        },
        "commercializerChecker": {
          "type": "string"
        },
        "commercializerCheckerData": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "defaultMintingFee": {
          "type": "integer"
        },
        "derivativeRevCeiling": {
          "type": "integer"
        },
        "derivativesAllowed": {
          "type": "boolean"
        },
        "derivativesApproval": {
          "type": "boolean"
        },
        "derivativesAttribution": {
          "type": "boolean"
        },
        "derivativesReciprocal": {
          "type": "boolean"
        },
        "expiration": {
          "type": "integer"
        },
        "royaltyPolicy": {
          "type": "string"
        },
        "transferable": {
          "type": "boolean"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "protocolv1.Transaction": {
      "type": "object",
      "properties": {
        "actionType": {
          "type": "string"
        },
        "blockNumber": {
          "type": "string"
        },
        "blockTimestamp": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "initiator": {
          "type": "string"
        },
        "ipId": {
          "type": "string"
        },
        "logIndex": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "transactionIndex": {
          "type": "string"
        }
      }
    },
    "protocolv1.TransactionRequestBody": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/protocolv1.TrxQueryOptions"
        }
      }
    },
    "protocolv1.TransactionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/protocolv1.Transaction"
        }
      }
    },
    "protocolv1.TransactionsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv1.Transaction"
          }
        }
      }
    },
    "protocolv1.TrxQueryOptions": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string",
          "enum": [
            "id",
            "blockNumber",
            "blockTimestamp",
            "actionType",
            "initiator",
            "ipId",
            "resourceId",
            "resourceType",
            "logIndex",
            "transactionIndex"
          ]
        },
        "orderDirection": {
          "type": "string",
          "enum": ["asc", "desc"]
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "where": {
          "type": "object",
          "properties": {
            "actionType": {
              "type": "string"
            },
            "blockNumber": {
              "type": "string"
            },
            "blockTimestamp": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "initiator": {
              "type": "string"
            },
            "ipId": {
              "type": "string"
            },
            "logIndex": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            },
            "resourceType": {
              "type": "string"
            },
            "transactionIndex": {
              "type": "string"
            }
          }
        }
      }
    },
    "protocolv2.IPGroup": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "integer"
        },
        "ip_count": {
          "type": "integer"
        }
      }
    },
    "protocolv2.IPGroupsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolv2.IPGroup"
          }
        }
      }
    }
  }
}
